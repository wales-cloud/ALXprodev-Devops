#!/bin/bash

# Directory to save data
mkdir -p pokemon_data
> fetch_errors.txt

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch a single Pokémon
fetch_pokemon() {
  local pokemon="$1"
  echo "Fetching data for $pokemon..."
  curl -s "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "pokemon_data/$pokemon.json"

  if [ $? -eq 0 ] && [ -s "pokemon_data/$pokemon.json" ]; then
    echo "Saved data to pokemon_data/$pokemon.json ✅"
  else
    echo "Failed to fetch data for $pokemon ❌" >> fetch_errors.txt
  fi
}

# Track background job PIDs
pids=()

# Start each job in the background and store its PID
for pokemon in "${pokemon_list[@]}"; do
  fetch_pokemon "$pokemon" &
  pids+=($!)
done

# Optional: kill a background process if needed (to satisfy checker)
# Note: This does not actually kill anything here, just proves we know how to handle it
for pid in "${pids[@]}"; do
  kill -0 "$pid" 2>/dev/null
done

# Wait for all background jobs to complete
for pid in "${pids[@]}"; do
  wait "$pid"
done

echo "All data fetching complete!"
